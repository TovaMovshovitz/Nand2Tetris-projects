// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load ,sel=address[3..5] ,a=Dmuxa ,b=Dmuxb ,c=Dmuxc ,d=Dmuxd ,e=Dmuxe ,f=Dmuxf ,g=Dmuxg ,h=Dmuxh );
    RAM8(in=in ,load=Dmuxa ,address=address[0..2] ,out=outRAMa );
    RAM8(in=in ,load=Dmuxb ,address=address[0..2] ,out=outRAMb );
    RAM8(in=in ,load=Dmuxc ,address=address[0..2] ,out=outRAMc );
    RAM8(in=in ,load=Dmuxd ,address=address[0..2] ,out=outRAMd );
    RAM8(in=in ,load=Dmuxe ,address=address[0..2] ,out=outRAMe );
    RAM8(in=in ,load=Dmuxf ,address=address[0..2] ,out=outRAMf );
    RAM8(in=in ,load=Dmuxg ,address=address[0..2] ,out=outRAMg );
    RAM8(in=in ,load=Dmuxh ,address=address[0..2] ,out=outRAMh );
    Mux8Way16(a=outRAMa ,b=outRAMb ,c=outRAMc ,d=outRAMd ,e=outRAMe ,f=outRAMf ,g=outRAMg ,h=outRAMh ,sel=address[3..5] ,out=out);
}
