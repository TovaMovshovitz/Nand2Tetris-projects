// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load ,sel=address ,a=Dmuxa ,b=Dmuxb ,c=Dmuxc ,d=Dmuxd ,e=Dmuxe ,f=Dmuxf ,g=Dmuxg ,h=Dmuxh );
    Register(in=in ,load=Dmuxa ,out=outRega );
    Register(in=in ,load=Dmuxb ,out=outRegb );
    Register(in=in ,load=Dmuxc ,out=outRegc );
    Register(in=in ,load=Dmuxd ,out=outRegd );
    Register(in=in ,load=Dmuxe ,out=outRege );
    Register(in=in ,load=Dmuxf ,out=outRegf );
    Register(in=in ,load=Dmuxg ,out=outRegg );
    Register(in=in ,load=Dmuxh ,out=outRegh );
    Mux8Way16(a=outRega ,b=outRegb ,c=outRegc ,d=outRegd ,e=outRege ,f=outRegf ,g=outRegg ,h=outRegh ,sel=address ,out=out);
}
